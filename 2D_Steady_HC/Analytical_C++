//File created by Faizan Hamid on 30/12/2020

#include <iostream>
#include <fstream>
#include <math.h>
#include <cmath>
using namespace std;
int main()
{
    int i,j,L=1,To=0,W=1,Tc=100,n,count=0;
    int x=101,y=101;
    double dx,dy,term1[x][y],term2[x][y],term3[x][y],term4[x][y],term5[x][y];
    double X[x],Y[y],T[x][y],Tnew[x][y];

    dx=(double)L/(x-1);
    dy=(double)W/(y-1);
    //Grid Generation

    X[0]=0;
    for(i=1;i<x;i++)
    {
        X[i]=X[i-1]+dx;
    }

    Y[0]=0;
    for(j=1;j<y;j++)
    {
        Y[j]=Y[j-1]+dy;
    }



    //ArrayInitialisation
    for(i=0;i<x;i++)
    {
        for(j=0;j<y;j++)
        {
            Tnew[i][j]=0;
            T[i][j]=0;
            term1[i][j]=0;
            term2[i][j]=0;
            term3[i][j]=0;
            term4[i][j]=0;
            term5[i][j]=0;
        }
    }

    //BCs
    for(i=0;i<x;i++)
    {
        Tnew[i][0]=0;               //Bottom Wall
    }
    for(i=0;i<x;i++)
    {
        Tnew[i][y-1]=100;           //Top wall
    }
    for(j=1;j<y-1;j++)
    {
        Tnew[0][j]=0;               //Left wall
    }
    for(j=1;j<y-1;j++)
    {
        Tnew[x-1][j]=0;             //Right wall
    }


    n=1;

    do
    {
        for(i=1;i<x-1;i++)
        {
            for(j=1;j<y-1;j++)
            {
                term1[i][j]=(1-pow(-1,n))/(n);
                term2[i][j]=(sinh((n*M_PI*Y[j])/L));
                term3[i][j]=(sin((n*M_PI*X[i])/L));
                term4[i][j]=(sinh((n*M_PI*W)/L));

                term5[i][j]=term1[i][j]*term2[i][j]*term3[i][j]/term4[i][j];

                T[i][j]=2*term5[i][j]*Tc/M_PI;
                //cout<<T<<endl<<endl;

                Tnew[i][j]=T[i][j]+Tnew[i][j];
            }
        }

        n=n+2;
        count++;

    }
    while(n<9);

    cout<<"The number of iteration is : "<<count<<endl;
    cout<<"The temp at midpoint is :"<<Tnew[50][50]<<endl;

    return 0;
}
